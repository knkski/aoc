from functools import reduce

numbers = '''
64971395968289825957777798234951578482268493996619135916436993343536643184775448
86619653635579851662193587147393183713823882961511953615712161319251584924414618
44687324923315381358331571577613789649166486152237945917987977793891739865149734
75599324136188633692653848227112475535957279145133584253489319269355865999117198
38492854891394214259336386148844158969389149927324921924586364845232282445323315
87584779552788544667253577324649915274115924611758345676183443982992733966373498
38568596576892924147798372792127982672797687255631542843479916175973493265982993
45623393853281196568234839548564273658926277281635247214679384499433581926322623
54854593635831559352247443975945144163183563723562891357859367964126289445982135
52353592311358931641762348363163756929194178299221388951371452534246856334938527
18842216855499965343337657312438956626248299249829716854438253668279235894352545
14211489649482374876434549682785459698885521673258939413255158196525696236457911
44759994744966554255425148684738882357693716723747655678213322727932452683494653
44447181615241292859194779599376847288825927799417341861441388839943227424848539
25383518651687147246943421311287324867663698432546619583638976637733345251834869
98574638537161774349862711144193354635693467163954534251539253657474479573224361
71135746412842319284893126836171545366482192449964917457186581516482467918264669
73654765284263928884137863647623237345882469142933142637583644258427416972595241
73725444971853172417653864836925379668893124519138295696154477585687228131774382
85526298435518449279131475183773622665543343867213132442232333964532912249324992
77961525785755863852487141946626663835195286762947172384186667439516367219391823
77433869215192647271737323561291184877338777124414496914948247751943782286342266
21574619684442819723531496955154949925379274921113881938375538446717192914824423
37761321272333982924289323437277224565149928416255435841327756139118119744528993
26915717441426438757333111632398261486295226459761188599928599551635751964869559
42996573876147933416263188665191445745718165353511493947359169754484256181715729
17195165594323552199346814729617189679698944337146
'''

numbers = [int(n) for n in numbers if n != '\n']

def circular_sum(offset=1):
    def reducer(memo, nums):
        if nums[0] == nums[1]:
            return memo + nums[0]
        else:
            return memo
    return reduce(reducer, zip(numbers, numbers[offset:] + numbers[:offset]), 0)

print(circular_sum())
print(circular_sum(offset=len(numbers)//2))
